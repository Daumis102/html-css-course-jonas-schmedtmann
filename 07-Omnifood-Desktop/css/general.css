/*

==== KEEPING TRACK OF OUR DESIGN DECISIONS ====
--- 01 TYPOGRAPHY SYSTEM ---

Font sizes (px)
10 / 12 / 14 / 16 / 18 / 20 / 24 / 30 / 36 / 44 / 52 / 62 / 74 / 86 / 98
- Font weights:
Default: 400
medium: 500
Semi-bold: 600
Bold: 700

- Line heights:
Default: 1
Small: 1.05
Medium: 1.2
Paragraph default: 1.6

- letter spacing:
-0.5px
0.75px
--- 02 COLOR SYSTEM ---
Primary: #e67e22

- Tints:
#fdf2e9
#fae5d3
- Shades:
#cf711f
- Accents:
- Greys:
#555
#333
#6f6f6f (lightest grey allows on #fdf2e9 background)

--- 04 SHADOWS ---

--- 05 BORDER-RADIUS ---

Default: 9px
11px

--- 06 WHITESPACE ---

- Spacing System (px)
2 / 4 / 8 / 12 / 16 / 24 / 32 / 48 / 64 / 80 / 96 / 128
 */

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

html {
    font-size: 62.5%; /* Makes 1rem = 10px. Using percentage of default browser font-size (10px / 16px) allows users to change the default browser font-size for accessibility while the UI adjusts automatically. */
}

body {
    font-family: "Rubik", sans-serif;
    line-height: 1;
    font-weight: 400;
    color: #555; /* Good color to use */
}


/***********************/
/* GENERAL REUSABLE COMPONENTS */
/***********************/

.container {
    max-width: 120rem; /* standard value across websites, as well as 1140px*/
    margin: 0 auto;
    padding: 0 3.2rem;
}

.grid {
    display: grid;
    row-gap: 9.6rem;
    column-gap: 6.4rem;
}

.grid--center-v {
    align-items: center;
}

.grid--2-cols { /* Exporting  columns to a new class allows reusing .grid class. Then in each grid we want we have to add this or some other variation to specify how many columns we want */
    grid-template-columns: repeat(2, 1fr);
}

.grid--3-cols { /* Exporting  columns to a new class allows reusing .grid class. Then in each grid we want we have to add this or some other variation to specify how many columns we want */
    grid-template-columns: repeat(3, 1fr);
}

.heading-primary, .heading-secondary, .heading-tertiary {
    font-weight: 700;
    /* Could have also used a shade of the primary color, but that would bring us away from startup vibe which usually use more gray colors */
    color: #333;
    letter-spacing: -0.5px; /* a very small number which doesn't really need to scale, so its fine to use px instead of rem */
}

.heading-primary {
    font-size: 5.2rem;
    line-height: 1.05;
    margin-bottom: 3.2rem;
}

.heading-secondary {
    font-size: 4.4rem;
    line-height: 1.2;
    margin-bottom: 9.6rem;
}

.heading-tertiary {
    font-size: 3rem;
    line-height: 1.2;
    margin-bottom: 3.2rem;
}

.subheading {
    display: block;
    font-size: 1.6rem;
    font-weight: 500;
    color: #cf711f;
    text-transform: uppercase;
    margin-bottom: 1.6rem;
    letter-spacing: 0.75px; /* When text is small and uppercase, it usually looks much better when there is some letter spacing */
}

.btn:link, .btn:visited {
    font-size: 2rem;
    font-weight: 600;
    color: #fff;
    display: inline-block;
    text-decoration: none;
    padding: 1.6rem 3.2rem; /* double the size on the sides than top and bottom */
    border-radius: 9px;

    transition: all 0.3s; /* This animates background-color and color whenever they have to change to different ones on hover and out of hover. Instead of "all" we could animate just one property by writing for example "background-color". This property should be put always on the original state. */
}


.btn--full:link, .btn--full:visited {
    background-color: #e67e22;
    color: #fff;
}

.btn--full:hover, .btn--full:active {
    background-color: #cf711f;
    color: #fff;
}

.btn--outline:link, .btn--outline:visited {
    background-color: #fff;
    color: #555;
}

.btn--outline:hover, .btn--outline:active {
    background-color: #fdf2e9;
    color: #555;

    /* Trick to add border inside*/
    /* border: 3px solid #fff; <-- This would not work, because it will apply the border outside of the button, making the whole layout shift once hovered, which looks bad */
    box-shadow: inset 0 0 0 3px #fff; /* "inset" makes the shadow appear within the button*/
}

.link:link, .link:visited {
    display: inline-block;
    color: #e67e22;
    text-decoration: none;
    border-bottom: 1px solid currentColor; /* currentColor will take the value from "color" attribute */
    padding-bottom: 2px;
    transition: all 0.3s;
}

.link:hover, .link:active {
    color: #cf711f;
    border-bottom: 1px solid transparent; /* This will make the border disappear on hover. Still using 1px so that layout does not move when this one appears */
}


.list {
    list-style: none;
    padding: 0;
    display: flex;
    flex-direction: column;
    gap: 1.6rem;
}

.list-icon {
    width: 3rem;
    height: 3rem;
    color: #e67e22;
}

.list-item {
    font-size: 1.8rem;
    display: flex;
    align-items: center;
    gap: 1.6rem;
}

/* HELPER / SETTINGS CLASSES */

.margin-right-sm {
    margin-right: 1.6rem !important; /* If we are adding this decorator to an element, we want it to have the specified effect, regardless of what other styling is on the element */
}

.margin-bottom-md {
    margin-bottom: 4.8rem !important;
}

.center-text {
    text-align: center;
}

strong {
    font-weight: 500;
}
